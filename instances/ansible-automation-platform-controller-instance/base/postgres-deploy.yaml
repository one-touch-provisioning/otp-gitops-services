apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  minReadySeconds: 30
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      name: postgresql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        name: postgresql
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              value: postgres
            - name: POSTGRESQL_PASSWORD
              value: postgrespw
            - name: POSTGRESQL_DATABASE
              value: controller-db
          image: registry.redhat.io/rhel8/postgresql-13:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 1
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql